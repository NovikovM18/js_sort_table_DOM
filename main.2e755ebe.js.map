{"version":3,"sources":["scripts/main.js"],"names":["tabBody","document","querySelector","tabHeader","currentSorted","sorting","el","handleSorted","target","innerText","children","sort","element1","element2","el1","el2","localeCompare","replace","map","element","append","addEventListener"],"mappings":";AAAA,aA2CA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAzCA,IAAMA,EAAUC,SAASC,cAAc,SACjCC,EAAYF,SAASC,cAAc,SAEnCE,EAAgB,CACZ,MAAA,EACI,UAAA,EACL,KAAA,EACG,QAAA,GAGNC,EAAU,SAACC,GACTC,IAAAA,EAAeD,EAAGE,OAAOC,UAE3BT,EAAAA,EAAQU,UACTC,KAAK,SAACC,EAAUC,GACVC,IAAAA,EAAaF,EAARG,EAAkBF,EAExBT,GAAAA,EAAcG,GAAe,CAClB,IAAA,EAAA,CAACQ,EAAKD,GAAlBA,EAD8B,EAAA,GACzBC,EADyB,EAAA,GAIzBR,OAAAA,GACD,IAAA,OACIO,OAAAA,EAAIJ,SAAS,GACjBD,UAAUO,cAAcD,EAAIL,SAAS,GAAGD,WACxC,IAAA,WACIK,OAAAA,EAAIJ,SAAS,GACjBD,UAAUO,cAAcD,EAAIL,SAAS,GAAGD,WACxC,IAAA,MACKK,OAAAA,EAAIJ,SAAS,GAAGD,UAAYM,EAAIL,SAAS,GAAGD,UACtD,QAESK,OAAAA,EAAIJ,SAAS,GAAGD,UAAUQ,QAAQ,WAAY,IACnDF,EAAIL,SAAS,GAAGD,UAAUQ,QAAQ,WAAY,OAGrDC,IAAI,SAAAC,GAAWnB,OAAAA,EAAQoB,OAAOD,KAEjCf,EAAcG,IAAiBH,EAAcG,IAG/CJ,EAAUkB,iBAAiB,QAAShB","file":"main.2e755ebe.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst tabBody = document.querySelector('tbody');\nconst tabHeader = document.querySelector('thead');\n\nconst currentSorted = {\n  'Name': false,\n  'Position': false,\n  'Age': false,\n  'Salary': false,\n};\n\nconst sorting = (el) => {\n  const handleSorted = el.target.innerText;\n\n  [...tabBody.children]\n    .sort((element1, element2) => {\n      let [el1, el2] = [element1, element2];\n\n      if (currentSorted[handleSorted]) {\n        [el1, el2] = [el2, el1];\n      }\n\n      switch (handleSorted) {\n        case 'Name':\n          return el1.children[0]\n            .innerText.localeCompare(el2.children[0].innerText);\n        case 'Position':\n          return el1.children[1]\n            .innerText.localeCompare(el2.children[1].innerText);\n        case 'Age':\n          return (el1.children[2].innerText - el2.children[2].innerText);\n        default:\n\n          return el1.children[3].innerText.replace(/[^0-9]/gi, '')\n          - el2.children[3].innerText.replace(/[^0-9]/gi, '');\n      }\n    })\n    .map(element => tabBody.append(element));\n\n  currentSorted[handleSorted] = !currentSorted[handleSorted];\n};\n\ntabHeader.addEventListener('click', sorting);\n"]}